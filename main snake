<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Calculator</title>
<style>
  body {
    background: #222;
    color: #eee;
    font-family: monospace, monospace;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
    user-select: none;
  }
  h1 {
    margin-bottom: 10px;
  }
  #display {
    background: #111;
    border: 2px solid #444;
    border-radius: 5px;
    width: 240px;
    height: 40px;
    margin-bottom: 15px;
    font-size: 24px;
    line-height: 40px;
    padding: 0 10px;
    text-align: right;
  }
  canvas {
    border: 2px solid #444;
    background: #000;
  }
  #instructions {
    margin-top: 10px;
    font-size: 12px;
    color: #aaa;
  }
</style>
</head>
<body>
<h1>Calculator</h1>
<div id="display">0</div>
<canvas id="game" width="240" height="240" tabindex="0"></canvas>
<div id="instructions">Use arrow keys to control the “snake”. Press any key to start.</div>

<script>
(() => {
  const canvas = document.getElementById('game');
  const ctx = canvas.getContext('2d');
  const size = 12;
  const width = canvas.width / size;
  const height = canvas.height / size;
  let snake = [{ x: Math.floor(width / 2), y: Math.floor(height / 2) }];
  let direction = { x: 0, y: 0 };
  let food = null;
  let gameInterval = null;
  let started = false;

  function placeFood() {
    let newFood;
    do {
      newFood = {
        x: Math.floor(Math.random() * width),
        y: Math.floor(Math.random() * height)
      };
    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));
    food = newFood;
  }

  function draw() {
    ctx.fillStyle = '#000';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    ctx.fillStyle = 'red';
    ctx.fillRect(food.x * size, food.y * size, size, size);
    ctx.fillStyle = 'lime';
    snake.forEach(segment => {
      ctx.fillRect(segment.x * size, segment.y * size, size, size);
    });
  }

  function moveSnake() {
    const head = { x: snake[0].x + direction.x, y: snake[0].y + direction.y };
    if (
      head.x < 0 || head.y < 0 ||
      head.x >= width || head.y >= height ||
      snake.some(segment => segment.x === head.x && segment.y === head.y)
    ) {
      clearInterval(gameInterval);
      alert('Game over! Reload the page to try again.');
      return;
    }
    snake.unshift(head);
    if (head.x === food.x && head.y === food.y) {
      placeFood();
    } else {
      snake.pop();
    }
    draw();
  }

  function startGame() {
    if (started) return;
    started = true;
    placeFood();
    direction = { x: 1, y: 0 };
    gameInterval = setInterval(moveSnake, 150);
  }

  canvas.addEventListener('keydown', e => {
    const keyDirections = {
      ArrowUp: { x: 0, y: -1 },
      ArrowDown: { x: 0, y: 1 },
      ArrowLeft: { x: -1, y: 0 },
      ArrowRight: { x: 1, y: 0 }
    };
    const newDir = keyDirections[e.key];
    if (newDir) {
      if (snake.length > 1) {
        const nextPos = { x: snake[0].x + newDir.x, y: snake[0].y + newDir.y };
        if (nextPos.x === snake[1].x && nextPos.y === snake[1].y) return;
      }
      direction = newDir;
      startGame();
      e.preventDefault();
    }
  });

  const display = document.getElementById('display');
  display.textContent = '0';

  canvas.focus();
  draw();
})();
</script>
</body>
</html>
